uio-devices restart
export compiled_model=~/resnet-50-tf/y2_bench.bin
export imgdir=~/resnet-50-tf/sample_images
export archfile=~/resnet-50-tf/AGX7_Performance.arch
cd ~/app
export COREDLA_ROOT=/home/root/app
./dla_benchmark -b=1 -cm $compiled_model -d=HETERO:FPGA,CPU -i $imgdir -niter=5 -plugins_xml_file ./plugins.xml -arch_file $archfile -api=async -perf_est  -nireq=4 -bgr

uio-devices restart
cd ~/app
export COREDLA_ROOT=/home/root/app
./run_y2_stream.sh


omz_downloader --name yolo-v2-tiny-vehicle-detection-0001  --output_dir $COREDLA_WORK/demo/models/
 
omz_converter --name yolo-v2-tiny-vehicle-detection-0001  --download_dir $COREDLA_WORK/demo/models/   --output_dir $COREDLA_WORK/demo/models/

dla_compiler --march $COREDLA_ROOT/example_architectures/AGX7_Performance.arch --network-file ./yolo-v2-tiny-vehicle-detection-0001.xml --foutput-format=open_vino_hetero --o $COREDLA_WORK/demo/y2_bench.bin --batch-size=1 --fanalyze-performance

dla_compiler --march $COREDLA_ROOT/example_architectures/AGX7_Performance.arch --network-file ./yolo-v2-tiny-vehicle-detection-0001.xml --foutput-format=open_vino_hetero --o $COREDLA_WORK/demo/y2_stream.bin --batch-size=1 --fanalyze-performance --ffolding-option=0
